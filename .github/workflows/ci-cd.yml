name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: |
        pytest
      env:
        SECRET_KEY: "test_secret_key"
        ALGORITHM: "HS256"
        ACCESS_TOKEN_EXPIRE_MINUTES: "30"
        DATABASE_URL: "sqlite:///./test.db"
        BASE_URL: "http://localhost:8000"
        SMTP_HOST: "test.example.com"
        SMTP_PORT: "587"
        SMTP_USER: "test@example.com"
        SMTP_PASSWORD: "test_password"
        EMAIL_FROM: "test@example.com"
        MAX_UPLOAD_SIZE: "5242880"

  build-and-deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/file-sharing-api:latest
    
    # Comment out the deployment section for now until you have the SSH details
    # - name: Deploy to production
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.SSH_USERNAME }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     script: |
    #       cd /path/to/your/app
    #       docker-compose pull
    #       docker-compose up -d
